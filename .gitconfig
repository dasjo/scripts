# This gitconfig is included from ~/.gitconfig. See gitconfig-template.

[credential]
    # Save passwords in ~/.git-credentials.
    helper = store

[core]
    bare = false
    filemode = true
    ignorecase = true
    logallrefupdates = true
    quotepath = false

    # Fix whitespace errors.
    whitespace = fix,-indent-with-non-tab,-indent-with-tab,trailing-space,cr-at-eol
    autocrlf = input

    # Use "less" as the pager. This will provide nice colors.
    pager = less -R

[branch]
    # automatically link new branch to start-point branch (upstream)
    autosetupmerge = true
    autosetuprebase = always

[help]
    # wait .5 seconds before autocorrecting
    autocorrect = 5

[push]
    # Ensure that when you `git push` only the current branch is pushed rather than all branches (why is this not the default?)
    default = current

[rerere]
    # Reuse recorded resolution of conflicted merges:
    # - http://shop.oreilly.com/product/0636920024774.do
    # - http://git-scm.com/2010/03/08/rerere.html
    enabled = true

[merge]
    # see: https://git-scm.com/docs/git-merge
    conflictstyle = diff3
    tool = p4merge

[mergetool]
    prompt = false

[mergetool "p4merge"]
    cmd = "p4merge $BASE $LOCAL $REMOTE $MERGED"
    trustExitCode = true
    keepBackup = false
    prompt = false

[diff]
    tool = p4merge

[difftool]
    prompt = false

[difftool "p4merge"]
    cmd = "p4merge $LOCAL $REMOTE"

[color]
    ui = auto

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse

; Allow using git urls like git://drupal:rules.git
[url "ssh://git@git.drupal.org/project/"]
    insteadOf = "drupal:"
[url "ssh://git@git.drupal.org/sandbox/"]
    insteadOf = "drupalsand:"

[alias]
    # list aliases
    aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort

    # shortcut for 'git status'
    st = status

    # shortcut for 'git commit'
    ci = commit

    # shortcut for 'git branch'
    br = branch

    # shortcut for 'git checkout'
    co = checkout

    # shortcut for 'git diff'
    df = diff

    # shows an abbreviated git log with nice formatting
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

    # performs 'git stash', 'git pull' and 'git stash pop' in a sequence
    pu = !git stash && git pull && git stash pop

    # removes all unstaged files except for .patch files.
    cn = clean -df --exclude=*.patch

    # locate commit where a particular file was introduced
    added-file = log --diff-filter=A --

    # list contributor stats for this repo
    contributors = !git shortlog -n -s --no-merges $@ | cat - && echo && echo total $(git rev-list --count HEAD)

    # consider a topic branch "finished" by deleting it locally and from your "origin" remote
    finish = ![[ -z "$*" ]] && echo 'No branch was provided.' 1>&2 && exit 1 || git branch -d "$*" && git push origin --delete $!

    # list commits not yet pushed to remote
    local = log --branches --not --remotes

    # show branches that have been merged into current (HEAD) branch
    merged = !git fetch --all && git branch --all --merged HEAD

    # show branches that have not been merged into current (HEAD) branch
    not-merged = !git fetch --all && git branch --all --no-merged HEAD

    # decorated graph view of one liner summarized commits from all branches. (inspired by git-extras)
    tree = log --all --graph --decorate --oneline --simplify-by-decoration

    # undo local changes
    undo = checkout --

    # remove staged changes from the index: (1) provide file name/pattern (2) otherwise, removes all
    unstage = reset HEAD --
    # reset hard
    rh = reset --hard

    # Quickly change the remote to drupal.org
    remote-do = !git remote add do $USER@git.drupal.org:project/`basename $PWD`.git && git fetch do && git branch --set-upstream-to=do/7.x-1.x
    remote-dor = !git remote-do && git reset --hard

    # count modified files
    count-modified = !echo $(git status --porcelain | grep -E '[^MARC]' | wc -l | awk '{ print $1 }') files modified

    # clone a d.o project.
    dc =!cd $PWD/$GIT_PREFIX && git clone $(git config --global user.drupal)@git.drupal.org:project/$1.git
    # Display remote tracking branch if any
    upstream = !git config branch.`git name-rev --name-only HEAD`.remote
    current-branch = rev-parse --abbrev-ref HEAD

    merge-to = "!gitmergeto() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git checkout $1 && git merge $tmp_branch && git checkout $tmp_branch; unset tmp_branch; }; gitmergeto"

[branch "test"]
    mergeoptions = --no-ff
[branch "live"]
    mergeoptions = --no-ff
